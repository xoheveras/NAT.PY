<Window x:Class="NAT.PY.WindowWPF.SimpleEditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NAT.PY.WindowWPF"
        mc:Ignorable="d"
        Title="SimpleEditorWindow" Height="714" Width="1129" WindowStyle="None" MinWidth="409" MinHeight="359" WindowStartupLocation="CenterScreen" MouseLeftButtonDown="Window_MouseLeftButtonDown" ResizeMode="CanResizeWithGrip" AllowsTransparency="True">
    <Window.Resources>
        <ControlTemplate x:Key="NATRich" TargetType="{x:Type RichTextBox}">
            <Border x:Name="border" BorderBrush="#1E222A" BorderThickness="{TemplateBinding BorderThickness}" Background="#1E222A" SnapsToDevicePixels="True">
                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" TargetName="border" Value="1"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#1E222A"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#1E222A"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="TreeViewItemControlNATPY" x:Name="TreeViewItemType" TargetType="{x:Type TreeViewItem}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="19" Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="Width" Value="16"/>
                            <Setter Property="Height" Value="16"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border Background="Transparent" Height="16" Padding="5" Width="16">
                                            <Path x:Name="ExpandPath" Data="M0,0 L0,6 L6,0 z" Fill="White" Stroke="#FF818181">
                                                <Path.RenderTransform>
                                                    <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF6E6D6D"/>
                                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF6E6D6D"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                    <Condition Property="IsChecked" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF6E6D6D"/>
                                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF6E6D6D"/>
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="PART_Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
                <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="False">
                    <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsExpanded" Value="False">
                    <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="HasItems" Value="False">
                    <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" TargetName="Bd" Value="#FF6E6D6D"/>
                    <Setter Property="Foreground" Value="#FF6E6D6D"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="IsSelectionActive" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="Bd" Value="#FF6E6D6D"/>
                    <Setter Property="Foreground" Value="#FF6E6D6D"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FF6E6D6D"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="TabItemControlTemplate1" TargetType="{x:Type TabItem}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                <Border x:Name="mainBorder" BorderBrush="#FF1E222A" BorderThickness="1,1,1,0" Background="#FF1E222A" Margin="0">
                    <Border x:Name="innerBorder" BorderBrush="#FF1E222A" BorderThickness="1,1,1,0" Background="#FF1E222A" Margin="-1" Opacity="0" Height="31"/>
                </Border>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" TargetName="mainBorder">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFECF4FC" Offset="0"/>
                                <GradientStop Color="#FFDCECFC" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FF7EB4EA"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" TargetName="mainBorder">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFECF4FC" Offset="0"/>
                                <GradientStop Color="#FFDCECFC" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FF7EB4EA"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" TargetName="mainBorder">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFECF4FC" Offset="0"/>
                                <GradientStop Color="#FFDCECFC" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FF7EB4EA"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" TargetName="mainBorder">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFECF4FC" Offset="0"/>
                                <GradientStop Color="#FFDCECFC" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FF7EB4EA"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                    <Setter Property="Background" TargetName="mainBorder" Value="#FFF0F0F0"/>
                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FFD9D9D9"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                    <Setter Property="Background" TargetName="mainBorder" Value="#FFF0F0F0"/>
                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FFD9D9D9"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                    <Setter Property="Background" TargetName="mainBorder" Value="#FFF0F0F0"/>
                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FFD9D9D9"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                    <Setter Property="Background" TargetName="mainBorder" Value="#FFF0F0F0"/>
                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FFD9D9D9"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Panel.ZIndex" Value="1"/>
                    <Setter Property="Margin" Value="-2,-2,0,-2"/>
                    <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Panel.ZIndex" Value="1"/>
                    <Setter Property="Margin" Value="-2,0,-2,-2"/>
                    <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Panel.ZIndex" Value="1"/>
                    <Setter Property="Margin" Value="0,-2,-2,-2"/>
                    <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Panel.ZIndex" Value="1"/>
                    <Setter Property="Margin" Value="-2,-2,-2,0"/>
                    <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                </MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Grid Background="#FF252931" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="165" Width="165*" MaxWidth="165"/>
            <ColumnDefinition Width="751*"/>
            <ColumnDefinition MinWidth="121" Width="213*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition MinHeight="29" Height="25*"/>
            <RowDefinition MinHeight="338" Height="681*"/>
        </Grid.RowDefinitions>
        <Menu Height="auto" Width="163" Background="#FF252931" Foreground="#FFA6A6A6" FontFamily="Montserrat Medium" MinHeight="30" Grid.Row="0" HorizontalAlignment="Left" Grid.RowSpan="2">
            <MenuItem Header="File" Margin="5,10,0,0" Foreground="#FFA6A6A6" IsTabStop="False">
                <MenuItem Header="New Project" />
                <MenuItem Header="Open" >
                    <MenuItem Header="Open Project"/>
                    <MenuItem Header="Open File" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="View" Margin="0,10,0,0" Foreground="#FFA6A6A6" IsTabStop="False"/>
            <MenuItem Header="Tool" Margin="0,10,0,0" Foreground="#FFA6A6A6" IsTabStop="False"/>
            <MenuItem Header="Run" Margin="0,10,0,0" Foreground="#FFA6A6A6" IsTabStop="False" Click="Run"/>
        </Menu>
        <DockPanel Grid.Column="1" HorizontalAlignment="Left" Height="auto" LastChildFill="True" Grid.Row="1" VerticalAlignment="Stretch" Width="962" Grid.ColumnSpan="2">
            <ScrollViewer Height="auto" VerticalScrollBarVisibility="Auto"  VerticalAlignment="Stretch" Width="auto" HorizontalAlignment="Left">
                <Grid HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="12*"/>
                        <ColumnDefinition Width="179*"/>
                    </Grid.ColumnDefinitions>
                    <RichTextBox x:Name="lineEditor" Grid.Column="0" HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Stretch" Width="60" MinWidth="10.4" Template="{StaticResource NATRich}" Foreground="#FFA6A6A6" Block.TextAlignment="Right" FontFamily="Montserrat Medium" FontSize="15" FontWeight="Bold" Block.LineHeight="1" IsEnabled="False">
                        <FlowDocument>
                            <Paragraph>
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                    <ScrollViewer Grid.Column="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Hidden">
                        <RichTextBox x:Name="Editor" Height="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="1665" Grid.Column="1" Template="{StaticResource NATRich}" Foreground="#FFA6A6A6" FontFamily="Montserrat Medium" FontSize="15" FontWeight="Bold" Block.LineHeight="1" KeyUp="Editor_KeyDown" CaretBrush="White">
                            <FlowDocument>
                                <Paragraph>
                                    <Run Text="RichTextBox"/>
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                    </ScrollViewer>
                </Grid>

            </ScrollViewer>
        </DockPanel>
        <TreeView x:Name="FileTree" MaxWidth="165" Height="auto" Grid.Row="1" VerticalAlignment="Stretch" Width="165" Background="#FF1B1F27" BorderBrush="#FF1B1F27" Foreground="#FFA6A6A6" IsTabStop="False" HorizontalAlignment="Left">
        </TreeView>

    </Grid>
</Window>
